---
converter: markdown
metadata:
  title: Introduction to building an e-commerce site
  description: Tutorial on how to build e-commerce sites powered by PlatformOS
slug: how-to/e-commerce/introduction
searchable: true
---

PlatformOS at its roots was all about selling stuff. We’ve initially focused on creation of marketplaces that would allow you to buy, sell or rent anything, from desk space, through farming equipment to piano lessons. With evolution of our platform we’ve been focusing more and more on general use cases and allowing you to design and built a system that would apply to any set of business rules you want.

Today, and over the course of the coming weeks, we will show you how to build a standard online shop, with product catalogue, shopping cart, orders and everything else you might expect from a typical e-commerce experience.

As an additional part of this tutorial we would like to describe how we approach building projects on PlatformOS. It’s not going to be an exhaustive list of building a project from start to finish since:

- There is no branding whatsoever involved. We are going to use an out-of-the-box version of the Bootstrap framework to get some basic styling. There will be no build process, no automated tests, no performance optimization etc. We will address these issues in separate tutorials.
- Aim of this project is to show how to achieve certain functionality within PlatformOS and not how to build the most usable or accessible e-commerce site.

## Determining the project scope

Before we begin writing any code, we should determine what actually we want to achieve. Our sample store will sell T-shirts!

Final solution should allow us to do the following:

### As a client you should be able to:

- browse t-shirts based on a few categories we will put them in (sex, brand, type)
- apply filters to drill down to more specific results when browsing;
- see price, detailed description of any t-shirt alongside with available sizes and uploaded photos;
- add selected items to a shopping cart and perform checkout, finished with payment.
- register a new account, where you can enter your billing and shipping information
- manage your shipping and billing addresses
- receive an email confirmation for your order
- browse the history of prior orders and check the status of the current ones
- receive email notifications whenever our order changes it’s state

### As the shop owner / staff member you should be able to:

- manage all t-shirts - add new and edit existing ones;
- update stock levels for all products;
- update pricing, bearing in mind that it should not affect prices of the existing orders;
- browser and update status of orders;
- browse clients database.

This is no small task so we will split description into a few smaller parts, and document the whole process in separate articles. You will be able to browse all of the files in project GitHub repository [GitHub - mdyd-dev/e-commerce: Sample e-commerce site powered by PlatformOS](https://github.com/mdyd-dev/e-commerce).

We’ve also created some static HTML templates for all of the important sections of the site. We’ll use them as a starting point for our site. You can see all of them in the [templates](https://github.com/mdyd-dev/e-commerce/tree/master/docs/templates) folder.

## Table of Contents

1. [Introduction](/how-to/e-commerce/introduction)
2. [Setting up the instance](/how-to/e-commerce/setting-up-the-instance)
3. [Configuring data schema](/how-to/e-commerce/configuring-data-schema)
4. [Building Admin panel](/how-to/e-commerce/building-admin-panel)

{% include 'shared/questions_section' %}
