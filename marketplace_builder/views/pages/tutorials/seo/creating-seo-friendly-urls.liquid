---
converter: markdown
metadata:
  title: Creating SEO Friendly URLs
  description: This guide will help you create SEO friendly URLs by walking you through an example.
slug: tutorials/seo/creating-seo-friendly-urls
searchable: true
---


This guide will help you create SEO friendly URLs. The example shows category listings grouped by country, e.g.:

* **/catalogue/Australia/Sydney**
* **/catalogue/Spain/Seville**

## Requirements
This is an advanced tutorial. To follow it, you should be familiar with basic PlatformOS concepts, HTML, GraphQL queries, Liquid, and the topics in the Get Started section, especially tutorials related to Pages.

* [How PlatformOS Works](/how-platformos-works)
* [Get Started: Pages tutorials](/tutorials/pages/pages)

## Steps

Creating SEO friendly category listings is a three-step process:

1. Setup page
2. Prepare GraphQL query
3. Add GraphQL query to page

### Step 1: Setup page

* Create Search Page with slug `catalogue`

* Define URL template in page:


```liquid
{% raw %}
{% assign url_template = '/catalogue/{country}/{city}' %}
{% endraw %}
```

* Decode current_url into params with Liquid filter `extract_url_params`:


```liquid
{% raw %}
{% assign url_params = current_full_path | extract_url_params: url_template %}
{% endraw %}
```

### Step 2: Prepare GraphQL query

Create a GraphQL query with country and city:

```graphql
query get_catalogue_listings(
  $query: String,
  $is_deleted: Boolean = false
  $country: String
  $city: String
) {
  listings(
    query: $query,
    listing: {
      is_deleted: $is_deleted
      address: {
        country: $country
        city: $city
      }
    }
  ) {
    total_entries
    results {
      slug
      name
      address{
        country
        city
      }
    }
  }
}
```

### Step 3: Add GraphQL query to page

Add the GraphQL query you created to your page, and pass extracted params to it:

```liquid
{% raw %}
{% query_graph 'get_catalogue_listings', result_name: 'g',
  country: url_params.country,
  city: url_params.city,
  is_deleted: false
%}
{% endraw %}
```

## Final Page

```liquid
{% raw %}
{% assign url_template = '/catalogue/{country}/{city}' %}
{% assign url_params = current_full_path | extract_url_params: url_template %}

<div class="results">
  <form action="." method="GET">
    {% query_graph 'demo_search_listings', result_name: 'g',
      country: url_params.country,
      city: url_params.city,
      is_deleted: false
    %}

    <strong>{{ g.listings.total_entries }}</strong>
    <ul>
    {% for item in g.listings.results %}
      <li>
        {{ item.slug }} - {{ item.name }} - {{ item.address.country }} - {{ item.address.city }}
      </li>
    {% endfor %}
    </ul>
  </form>
</div>
{% endraw %}
```

## Example URLs

**/catalogue/Australia/Melbourne** - listings from Melbourne, Australia

**/catalogue//Sydney** - listings from Sydney

**/catalogue//** - all listings

{% include 'shared/questions_section' %}
