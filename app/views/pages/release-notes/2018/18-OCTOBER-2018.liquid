---
converter: markdown
metadata:
  title: Priority setting and limitations of async_callback_actions
  description: October 18, 2018
  skip_contribute_button: true
slug: release-notes/18-OCTOBER-2018
---

#### {{ page.metadata.description }}

<h4 class="release-note release-note__improved">IMPROVED</h4>

Some users reported issues with running very long tasks in `async_callback_actions` because the task was too slow to execute.

Before, you had no control or information about limits, errors, timeouts.

## priority

You have full control over priority of your `async_callback_actions`.
If you don't set priority at all, it will be set to `default`.

## max_attempts

You can also set maximum number of attempts if job fails for whatever reason - timeout, error in the code, 3rd party api not responding

Default is 1. Use it with caution, as every attempt uses resources.

### Example

```yaml
{% raw %}
[...]

async_callback_actions:
  delay: 10
  priority: low
  max_attempts: 2
  content: >
    {% graphql res = 'long_running_task' %}

[...]
{% endraw %}
```

### Limits

| Priority | Timeout   |
|----------------|-----------|
| high           | 1 minute  |
| default        | 5 minutes |
| low            | 4 hours   |

Keep them in mind when writing code so that it runs fast enough for its priority.

#### Logging

Additionally, when a job fails or timeouts it will be logged so you will know when something goes wrong.
You can access the log using `pos-cli logs` command.
