---
metadata:
  title: Get Started
  description: Follow these step-by-step tutorials to set up your development environment and deploy your first platformOS site.
converter: markdown
layout: application
---

Welcome to platformOS! Our Get Started guides will walk you through the steps of building a sample site or app on platformOS. They include detailed explanations for each step, example code, tips and best practices on development workflow and QA, and links to learn more.

### What do you need to know to start

Besides standard web technologies like HTML, CSS, JavaScript, platformOS uses a couple of languages and technologies that you need to be familiar with to build a site on our platform.

**Command line** knowledge is required to navigate through the project folder structure and to deploy the changes you make locally to the server.

- [Command line crash course](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line)

**GIT** knowledge can be very basic. You might be needed to clone a repository, but for the most platformOS use cases we’ve developed a friendly command line tool that will help with everyday tasks.

- [git - the simple guide](https://rogerdudler.github.io/git-guide)
- [Learn Enough Git to Be Dangerous](https://www.learnenough.com/git-tutorial/getting_started)

**GraphQL** is a query language that will help you build your back-end and needed APIs. It allows to manage data for your application, store and read database records and more. In the Get Started guide you will be guided through writting your first queries, so don’t worry!

- [Introduction to GraphQL](https://graphql.org/learn)
- [The Fullstack Tutorial for GraphQL](https://www.howtographql.com)

**Liquid** is a template language that allows you to build dynamic pages and provide dynamic configuration. In the Get Started guide we will be using it to server-side render data and to manage how the page behaves depending on user's action. You can check out the following articles but you can also learn while doing – it should be simple to understand.

- [A Complete Guide to Liquid Markup](https://documentation.platformos.com/api-reference/liquid/introduction) by the platformOS team
- [Learning Liquid](https://www.shopify.com/partners/blog/topics/learning-liquid)
- [SHOPIFY LIQUID: Theme Programming for Beginners](https://www.youtube.com/watch?v=zBtwd2OfZsI)

**YAML** allows you to store complex data in a human-readable format. We will be using it for building our databases, set some simple configuration, and optionally to store the translation strings for multilanguage webstites.

- [Learn YAML in 18 mins](https://www.youtube.com/watch?v=1uFVr15xDGg)
- [Get started with YAML in 5 minutes](https://www.educative.io/blog/yaml-tutorial)



## Hello, World!

[Hello, World!](/get-started/hello-world/hello-world) is the first part of our Get Started guide, that will teach you how to set up your development environment, create a simple site, make a small change on the home page, and deploy it. This is to make sure you have everything you need and everything works. You can stop here and start experimenting based on our documentation, or you can move on to the second part of our Get Started guides.

## Build a ToDo List App

[Build a ToDo List App](/get-started/todo-app/build-todo-list-app) is the second part of our Get Started guide that walks you through the steps of creating a ToDo List app on platformOS from setting up your development environment to deploying and testing your finished app. It explains basic concepts, main building blocks, and the logic behind platformOS, while also giving you some recommendations on workflow.

[Build a ToDo List App - Part 2: Extend Your App](/get-started/todo-app/build-todo-list-app-part-2) shows you how to extend what you have built in part 1 to explore additional platformOS features in greater depth and learn about more best practices.
