---
metadata:
  title: Get Started — Introduction
  description: Follow these step-by-step tutorials to set up your development environment and deploy your first platformOS site.
converter: markdown
---

Welcome to platformOS! Our Get Started guides will walk you through the steps of building a sample site or app on platformOS. They include detailed explanations for each step, example code, tips and best practices on development workflow and QA, and links to learn more.


## What you need to know

Besides standard web technologies like HTML, CSS, JavaScript, platformOS uses a couple of languages and technologies that you need to be familiar with to build a site on our platform.

**Command line** knowledge is required to navigate through the project folder structure and to deploy the changes you make locally to the server.

- [Command line crash course](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line)

We recommend using a **version control system**. Internally, we use GitHub to host and collaborate on our git repositories. You can choose other version control systems, or decide to go without any: all that is required is your codebase and an Instance you can sync/deploy to.

- [git - the simple guide](https://rogerdudler.github.io/git-guide)
- [Learn Enough Git to Be Dangerous](https://www.learnenough.com/git-tutorial/getting_started)

**GraphQL** is a query language that will help you build your back-end and needed APIs. It allows to manage data for your application, store and read database records and more. In the Get Started guide you will be guided through writing your first queries, so don’t worry!

- [Introduction to GraphQL](https://graphql.org/learn)
- [The Fullstack Tutorial for GraphQL](https://www.howtographql.com)

**Liquid** is a template language that allows you to build dynamic pages and provide dynamic configuration. In the Get Started guide we will be using it to server-side render data and to manage how the page behaves depending on user's action. You can check out the following articles but you can also learn while doing – it should be simple to understand.

- [A Complete Guide to Liquid Markup](/api-reference/liquid/introduction) by the platformOS team
- [Learning Liquid](https://www.shopify.com/partners/blog/topics/learning-liquid)
- [SHOPIFY LIQUID: Theme Programming for Beginners](https://www.youtube.com/watch?v=zBtwd2OfZsI)

**YAML** allows you to store complex data in a human-readable format. We will be using it for building our databases, set some simple configuration, and optionally to store the translation strings for multilanguage webstites.

- [Learn YAML in 18 mins](https://www.youtube.com/watch?v=1uFVr15xDGg)
- [Get started with YAML in 5 minutes](https://www.educative.io/blog/yaml-tutorial)


## Not sure where to start?

Let’s build a simple website together! If you are new to platformOS, we propose that you start with a simple course that we’ve prepared.

You will learn how to set up your environment, get a starter codebase, and deploy everything to your platfromOS instance. Next, you’ll  build a simple to-do app using all of the core platformOS concepts.

Ready? Let’s learn how to [install and configure](/get-started/installation-and-configuration/) your development environment.


## Quick start

1. Go to the Partner Portal and [sign up](https://partners.platformos.com/accounts/sign_up)
2. [Create new instance](https://partners.platformos.com/instances/new) in the Partner Portal
3. Install pos-cli
    platformOS command-line interface is distributed through NPM.
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
npm install -g @platformos/pos-cli
  </code></pre>
4. Create an empty folder for your project
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
mkdir platformos-hello
  </code></pre>
5. Navigate to the project's folder in the command line
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
cd platformos-hello
  </code></pre>
6. Initialize the platformOS directory structure
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
pos-cli init
  </code></pre>
7. Authenticate your environment
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
pos-cli env add &lt;environment&gt; --email &lt;your email&gt; --url &lt;your instance url&gt;
  </code></pre>
8. Upload your code to the instance
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
pos-cli deploy &lt;environment&gt;
  </code></pre>
9. Upload code changes automatically when you save the file
  <pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
pos-cli sync &lt;environment&gt;
  </code></pre>


## Learn the core concepts
- **[Developement workflow](/developer-guide/platformos-workflow/development-workflow)**
  Learn the steps needed to deploy your code to a platformOS instance.
- **[Codebase structure](/developer-guide/platformos-workflow/codebase)**
  A detailed walkthrough of the directories and files required to work on the platform.
- **[platformOS Command Line Interface](/developer-guide/pos-cli/pos-cli)**
  Check out how to use the command line to interact with your instance.
- **[Routing and templates](/developer-guide/pages/pages)**
  Step-by-step guide on how the routing and creating subpages work on platformOS.
- **[Schema](/developer-guide/users/users)**
  Learn how to define models with properties and persist the data in it.
- **[Modules](/developer-guide/modules/modules)**
  The platform supports and encourages building modular codebases. This guide will show you how to do that.
- **[Data management](/developer-guide/data-import-export/import)**
  If you need to import or export previously prepared data, this is how you can do it.
- **[Effective Development Using the pos-cli](https://documentation.platformos.com/developer-guide/pos-cli/effective-development-using-pos-cli.liquid)**
  A deep-dive into clever techniques for everyday development.


## Still have questions?
**Our community can help!** The platformOS community is open to all users to share the experience and knowledge gathered from working on platformOS-specific projects.

[Join the platformOS community](https://community.platformos.com/)


{% render 'alert/next', content: 'Installation and Configuration', url: '/get-started/installation-and-configuration/' %}
