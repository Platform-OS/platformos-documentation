---
metadata:
  title: API Reference
  description: Explore APIs existing in platformOS
converter: markdown
---

This section provides API Reference Documentation for the APIs you'll use when developing on platformOS.

## Complete Guide to Liquid Markup

**Liquid** (or Liquid markup) is a template language used in platformOS to build dynamic pages, and to provide dynamic configuration.  

Inspired by the official documentation, we divided our Liquid documentation into multiple parts for easy access, keeping it logical for newcomers. We start with an introduction, then describe types, tags grouped into three larger sections (variables, flow control, and loops), filters, objects, and whitespace control. 

We have added platformOS-specific filters and tags that you can use when developing on platformOS. You should start learning about these when youâ€™re comfortable with Liquid in general. We added a lot of custom filters and tags that make dealing with Liquid, dates, JSON, data structures, encoding, or URL templates easier. platformOS gives you the power to improve your code by exposing the Liquid profiler and giving you a filter that measures the execution time of any given block with a 1ms granularity. 

Our complete guide to Liquid markup includes:

* [Introduction](/api-reference/liquid/introduction)
* [Types](/api-reference/liquid/types)
* [Tags](/api-reference/liquid/platformos-tags) (including platformOS-specific tags)
* [Filters](/api-reference/liquid/platformos-filters) (including platformOS-specific filters)
* [Whitespace control](/api-reference/liquid/whitespace-control)
* [Sanitization](/api-reference/liquid/sanitization)  
* Examples for all of the above

{% include 'alert/tip', content: 'Interested in why we use Liquid or what sources we used for our documentation? Read our article titled [A Complete Guide to Liquid Markup (in platformOS)](https://www.platformos.com/blog/post/a-complete-guide-to-liquid-markup-in-platformos) on the platformOS blog.' %}
  

## GraphQL API

**GraphQL** is query language used to communicate with our data storages. Our GraphQL API Reference includes:

* Glossary
* Queries
* Mutations
* Objects
* Scalars
* Interfaces
* Enums
* Inputs

We also provide a guide on [how to effectively use the `pos-cli`](/developer-guide/pos-cli/developing-graphql-queries-using-pos-cli-gui) while developing GraphQL queries in platformOS. 
