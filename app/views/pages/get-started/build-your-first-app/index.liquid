---
metadata:
  title: Build your first app
  description: Follow these step-by-step tutorials to build a simple To do application on platformOS.
converter: markdown
---


Building an actual application might be the best way to learn all the core aspects of developing on platformOS.

This tutorial will guide you through the steps of creating a very simple To do app. It explains **how to build a layout** using Liquid, how to **build** the structure of **a database** using YAML, and then – how to use it for **saving and loading data** with the help of GraphQL. During this tutorial you will also have a chance to take a look on the basic workflow that you can carry on for your everyday work.

{% include 'alert/tip', content: 'If this is your first encounter with platformOS, we do recommend that you take a look on our [Get Started](/get-started) section.' %}


## What functionalities a To do app needs

At first, let’s figure out what are the core functions we would like to implement. A _To Do_ application is basically just a simple list of items. So we would like to be able to:

- View the list if there are any items on it;
- Add a new item to the list;
- Mark an item as done which would remove it from the list.


## What do I need to know to start?

In this tutorial we assume that you’ve read through our [Get Started](/get-started) tutorial, so you have your **development environment** set up. We require you to understand **HTML** as we won’t be explaining that part of the code at all. We will also be using a **little bit of CSS** to add some styling to our app, but we will keep it very basic, and you will be able to copy it, if the design aspect of building apps is not your area of expertise.

This tutorial is not about explaining any language’s syntax. We will be using GraphQL and explaining what a particular code fragment does, but for the deeper understanding of given language we recommend you look at a specific documentation. Although, it might be that a good way to learn the syntax is just by using the language so you will do just fine even if you don’t yet know any of it.

To sum it up really quick – the very first thing you will need is [your own platformOS instance](/get-started/installation-and-configuration/#create-an-instance), pos-cli [installed](/get-started/installation-and-configuration/#install-pos-cli) and [configured](/get-started/working-with-the-code-and-files/#authenticate-your-environment) and a folder for your project with a [proper folder structure](/get-started/working-with-the-code-and-files/#proper-platformos-directory-structure).


## Get the final source code

If you’d like to check out the [final source code](https://github.com/Platform-OS/tutorial-todo), we published it on GitHub. You can clone the repository and deploy to your own instance anytime.

The application is deployed [on our test environment](https://tutorial-todo.staging.oregon.platform-os.com) if you’d like to take a peek.


{% render 'alert/next', content: 'Building the user interface', url: '/get-started/build-your-first-app/building-the-user-interface' %}
