---
metadata:
  title: Installation and Configuration
  description: Follow these step-by-step tutorials to set up your development environment and deploy your first platformOS site.
converter: markdown
---


There are three key steps for starting development on platformOS:  
- [Signing up on the Partner Portal](#sign-up-on-partner-portal)  
- [Creating an instance](#create-an-instance)  
- [Installing the platformOS command-line interface](#install-pos-cli)


## Sign up on the Partner Portal

The [Partner Portal](https://partners.platform-os.com/) is an online interface where you can create, manage, and configure your sites.

<img loading="lazy" class="w-full" src="{{ 'images/get-started/partner-portal-list.png' | asset_url }}" alt="Screenshot of the Partner Portal">

To interact with platformOS you will need to have an account, so the very first thing you need to do is [register on the Partner Portal](https://partners.platformos.com/accounts/sign_up).

Make sure to verify your account by following the instructions in the email we send you after registration.


## Create an instance

To start working with platformOS, you need to create an instance where you’ll run your code and store files.

{% include 'alert/tip', content: 'Each separate site that you can create in the Partner Portal is called an **instance**.' %}

To create a new instance, log in to the [Partner Portal](https://partners.platformos.com/). By default, you will see your list of instances after logging in. Click on the [New Instance](https://partners.platformos.com/instances/new) button above the instances list.

<img loading="lazy" class="w-full" src="{{ 'images/get-started/new-instance.png' | asset_url }}" alt="Screenshot of the Instances list on the Partner Portal, highlighting the New Instance button">

The _Instance name_ can be any name of your choice. The other options you’ll need to select are the _Data Center_ and _Billing plan_. For this scenario, use the _Staging_ environment, which is a **completely free** environment designed for testing and development.

Select the _Staging_ data center and choose the _Staging Unbilled_ plan to create your first instance.

<img loading="lazy" class="w-full" src="{{ 'images/get-started/create-new-instance.png' | asset_url }}" alt="Screenshot of a properly filled New Instance form">

In the list of instances, your instance may initially be marked with the _SCHEDULED_TO_ACTIVATE_ status. This process usually only takes a few seconds.

After a short while, refresh the page, and the status should change to _Active_. This means you can visit the instance URL listed and check if it’s working. This URL is important, as you’ll see all your code changes reflected here.


## Install pos-cli

The platformOS command line interface – or `pos-cli` – is a tool that allows you to interact with your instance.

The `pos-cli` offers a variety of options that you can explore later in this guide or directly in the [pos-cli documentation](/developer-guide/pos-cli/pos-cli).

{% include 'alert/tutorial', content: 'For detailed usage instructions and advanced options, make sure to read the <a href="https://github.com/Platform-OS/pos-cli?tab=readme-ov-file#overview"_blank">README of the pos-cli on GitHub</a>.' %}

To install `pos-cli`, you need a recent version of NPM (Node Package Manager) installed on your system. NPM is distributed with Node.js, so we recommend following the [official guide for installing Node.js and NPM](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm). If you get lost there, the easiest way is to use the [Node.js installer](https://nodejs.org/en/download/), which functions like any other program installer.

Once Node.js is installed, open your command-line tool of choice and run:

<pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
npm install -g @platformos/pos-cli
</code></pre>

The `-g` attribute installs the tool globally, which may require higher system permissions. On Unix-based systems, use `sudo`, and on Windows, you may need to run the command-line tool as an administrator (this option is available in the right-click context menu).

<pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
sudo npm install -g @platformos/pos-cli
</code></pre>

After installing `pos-cli`, verify the installation by running the following command:

<pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
pos-cli -v
</code></pre>

If everything was installed successfully, you’ll see the version number of the `pos-cli` tool displayed (for example, `4.7.1`).


{% render 'alert/next', content: 'Working with the code and files', url: '/get-started/working-with-the-code-and-files/' %}
