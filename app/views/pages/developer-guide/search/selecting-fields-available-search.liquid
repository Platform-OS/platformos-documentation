---
converter: markdown
metadata:
  title: Selecting Fields Available for Search
  description: Some use cases require you to select fields available for search. In this example, you give your users the ability to search through users using their `first_name`.
---
{%- capture content -%}This article promotes `customizations`, `listings` and `people` GraphQL queries, which are deprecated due to the limited configuration option. To leverage the power of ElasticSearch, we recommend using [JSON Documents](/developer-guide/json-documents/json-documents), which allows you to define your own ElasticSearch mapping and have full control on what gets stored in the ElasticSearch.{%- endcapture -%}{%- render 'alert/deprecated', content: content -%}

Some use cases require you to select fields available for search. For example, you want to give your users the ability to search through users but only using their `first_name`.

## Profile fields

```graphql
query get_owners {
  people(query: { keyword: "John", fields: [{ name: "first_name" }] }) {
    results {
      first_name
    }
  }
}
```

Returns users whose `first_name` exactly matches `John`.
