---
converter: markdown
metadata:
  title: Module Templates
  description: Detailed description of module templates with example.
---

With **module templates**, you can configure modules before deploying them to an environment. For example, you can specify the slug for a page (where the page will be available after the module is installed) during the module installation process.

## Configuration

Values for variables must be provided in the `template-values.json` file placed at the top level of the module:

```shell
modules
└──admincms
    ├── template-values.json
    ├── private
    │   └── graphql
    │       ├── get_customizations.graphql
    │       └── get_pages.graphql
    └── public
        └── views
            └── pages
                └── admin.liquid
```

## Adding templates to module code

Templates work both in deploy mode (using the `pos-cli deploy` command) and in sync mode (using the `pos-cli sync` command). When the `template-values.json` file is present, pos-cli finds it and applies the values in it to the templates. Then, it sends the output to the server with the resulting file filled in based on the templates.

The process for adding templates to module code is the same for both deploy and sync modes. If you're running sync mode and make changes to the `template-values.json` file, and then change one of the files using the template, those changes are automatically processed, and the latest version is uploaded to the server.

## Markup

Everything between `<%=` and `=%>` is interpreted as a key that is looked up in the template configuration file. No logic is supported within the markup. The only available filter is `&`, which unescapes the value provided by the user (by default, all values are escaped).


## Example

If you have a page with the following code:

```yaml
---
slug: <%= &slug =%>
layout: modules/contact_form/main
---

<h1><%= title =%></h1>
```

And a top-level `template-values.json` file containing:

```json
{
  "slug": "contact_form",
  "title": "Contact Page title"
}
```

During deploy or sync, it will get filled in and sent to the server as:

```yaml
---
slug: contact_form
layout: modules/contact_form/main
---

<h1>Contact Page title</h1>
```

## Related topics

* [Configuring a Module Template](/developer-guide/modules/configuring-module-template)
