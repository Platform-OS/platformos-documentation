---
converter: markdown
metadata:
  title: Record Relations
  description: Defining relations between Records.
---

With `properties`, you can create your custom fields for storing the data. In the properties, you can also store the `id` of an existing object. Then you can fetch the data with `related_record(join_on_property: String!)` or the `related_user(join_on_property: String!)` field in GraphQL.

In order to export/import data with relations preserved, you need to define them in Table files using the `belongs_to` attribute.

##### app/schema/house.yml

```yaml
name: house
properties:
- name: address
  type: string
```

##### app/schema/cars.yml
```yaml
name: cars
properties:
- name: color
  type: string
- name: house_id
  type: integer
  belongs_to: house
```
