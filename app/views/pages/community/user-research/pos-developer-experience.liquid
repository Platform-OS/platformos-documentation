---
converter: markdown
metadata:
  title: FINISHED - platformOS Developer Experience — Interview and Testing
  description:  Results of user interviews with experienced pOS developers
---

### Date
February 2020

### Goal 
The goal was to see the overall journey of experienced pOS developers focusing on both successes and challenges they are facing. During the interview, we also asked them to share processes they used in a recent project.

### Method
Semi-structured interviews with experienced platformOS developers to get a better understanding of their experiences with platformOS. We focused on three main topics:

* Development with pOS (workflows, preferences on version control, tools)
* Documentation (overall experience, obstacles, and suggestions for improvements)
* Partner Portal (usage, dashboard preferences)

### Results

#### 1. Development with platformOS

**Learning curve**

The biggest strengths of pOS — flexible and limitless — pose the biggest challenges, too: learning the workings of the platform, especially in the very beginning takes more effort and patience from developers. 

* Takes about 2 weeks for new developers to deepdive into pOS
* GraphQL knowledge is essential

*Possible solution:* Templates might provide an aid during the learning process.

**Resources and support**

* As platformOS is new in the market there is less opportunity for peer support: there’s no information on Google or StackOverflow yet
* On the positive side, the pOS team always provides great support via Slack

*Possible solution:* New Community Site is intended to be an efficient and quick platform for peer support

**Plans for Versioning**

Interviewed the devs to share previous experiences about versioning. 
Preferences:

* The most important thing is to clearly notify users about new versions. The current practice of regular release notes is good: titles are easy to scan in emails or on the documentation site, users check details if necessary.
* 6-12-month notice for breaking changes
* Highlight security related updates

#### 2. Documentation
Developers spend the most time on the API reference pages which they are satisfied with.

* Search results are not precise
*Fixed and improved in March 2020*
* Tutorials: name is confusing
*Renamed to Developer Guide in March 2020*
* API reference
Sticky in page navigation would be more useful, as the pages are quite long
* More information about the status of feature requests
*Possible solution:* discussion about new feature requests on the community site.

#### 3. Partner Portal

Used mostly at the beginning of projects, to set up Instances. 
Issues/suggestions

* Information Architecture: Instead of arrangement by Instances, it would be better to first have apps which would have several Instances
New Partner Portal design includes the information architecture update.*
* Can take away access within an Instance, but for editing you need to find the person first and edit permissions there
*New Partner Portal design includes the information architecture update.*
* Would be nice to see all the statistics within each Instance
Alternate solution could be the advanced usage analytics for Instances.


**Others**

Would be nice to have Town Halls for developers.

*Possible solution:* The new Community site is intended to provide more opportunity for organizing such events, for example, through the upcoming groups feature.
